name: Terraform Deploy

on:
  push:
    branches:
      - develop
      - staging
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.5
          
      - name: Determine environment
        id: set-env
        run: |
          CURRENT_BRANCH="${GITHUB_REF_NAME}"
          echo "Current branch is $CURRENT_BRANCH"
      
          if [ "$CURRENT_BRANCH" = "develop" ]; then
            echo "env_type=DEVELOP" >> $GITHUB_OUTPUT
          elif [ "$CURRENT_BRANCH" = "staging" ]; then
            echo "env_type=STAGING" >> $GITHUB_OUTPUT
          elif [ "$CURRENT_BRANCH" = "main" ]; then
            echo "env_type=MAIN" >> $GITHUB_OUTPUT
          else
            echo "env_type=UNKNOWN" >> $GITHUB_OUTPUT
            echo "Unsupported branch for this workflow."
            exit 1
          fi
        

      ####################################################
      # DEVELOP
      ####################################################
      - name: Terraform Plan (Develop)
        if: steps.set-env.outputs.env_type == 'DEVELOP'
        working-directory: ./terraform
        env:
          TF_VAR_environment: ${{ secrets.DEVELOP_ENVIRONMENT }}
          TF_VAR_aws_region: ${{ secrets.DEVELOP_AWS_REGION }}
          TF_VAR_ingest_bucket_name: ${{ secrets.DEVELOP_INGEST_BUCKET_NAME }}
          TF_VAR_processed_bucket_name: ${{ secrets.DEVELOP_PROCESSED_BUCKET_NAME }}
        run: |
          terraform init
          terraform plan

      # (Apply) se ejecuta en la misma rama. 
      - name: Terraform Apply (Develop)
        if: steps.set-env.outputs.env_type == 'DEVELOP' && github.event_name == 'push'
        working-directory: ./terraform
        env:
          TF_VAR_environment: ${{ secrets.DEVELOP_ENVIRONMENT }}
          TF_VAR_aws_region: ${{ secrets.DEVELOP_AWS_REGION }}
          TF_VAR_ingest_bucket_name: ${{ secrets.DEVELOP_INGEST_BUCKET_NAME }}
          TF_VAR_processed_bucket_name: ${{ secrets.DEVELOP_PROCESSED_BUCKET_NAME }}
        run: terraform apply -auto-approve

      ####################################################
      # STAGING
      ####################################################
      - name: Terraform Plan (Staging)
        if: steps.set-env.outputs.env_type == 'STAGING'
        working-directory: ./terraform
        env:
          TF_VAR_environment: ${{ secrets.DEVELOP_ENVIRONMENT }}
          TF_VAR_aws_region: ${{ secrets.STAGING_AWS_REGION }}
          TF_VAR_ingest_bucket_name: ${{ secrets.STAGING_INGEST_BUCKET_NAME }}
          TF_VAR_processed_bucket_name: ${{ secrets.STAGING_PROCESSED_BUCKET_NAME }}
        run: |
          terraform init
          terraform plan

      - name: Terraform Apply (Staging)
        if: steps.set-env.outputs.env_type == 'STAGING' && github.event_name == 'push'
        working-directory: ./terraform
        env:
          TF_VAR_environment: ${{ secrets.STAGING_ENVIRONMENT }}
          TF_VAR_aws_region: ${{ secrets.STAGING_AWS_REGION }}
          TF_VAR_ingest_bucket_name: ${{ secrets.STAGING_INGEST_BUCKET_NAME }}
          TF_VAR_processed_bucket_name: ${{ secrets.STAGING_PROCESSED_BUCKET_NAME }}
        run: terraform apply -auto-approve

      ####################################################
      # PRODUCTION
      ####################################################
      - name: Terraform Plan (Main)
        if: steps.set-env.outputs.env_type == 'MAIN'
        working-directory: ./terraform
        env:
          TF_VAR_environment: ${{ secrets.MAIN_ENVIRONMENT }}
          TF_VAR_aws_region: ${{ secrets.MAIN_AWS_REGION }}
          TF_VAR_ingest_bucket_name: ${{ secrets.MAIN_INGEST_BUCKET_NAME }}
          TF_VAR_processed_bucket_name: ${{ secrets.MAIN_PROCESSED_BUCKET_NAME }}
        run: |
          terraform init
          terraform plan

      - name: Terraform Apply (Main)
        if: steps.set-env.outputs.env_type == 'MAIN' && github.event_name == 'push'
        working-directory: ./terraform
        env:
          TF_VAR_environment: ${{ secrets.MAI_ENVIRONMENT }}
          TF_VAR_aws_region: ${{ secrets.MAIN_AWS_REGION }}
          TF_VAR_ingest_bucket_name: ${{ secrets.MAIN_INGEST_BUCKET_NAME }}
          TF_VAR_processed_bucket_name: ${{ secrets.MAIN_PROCESSED_BUCKET_NAME }}
        run: terraform apply -auto-approve
