name: Terraform Deploy

on:
  push:
    branches:
      - develop
      - staging
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.5

      - name: Detect environment
        id: set-env
        run: |
          CURRENT_BRANCH="${GITHUB_REF_NAME}"

          # Asigna un "alias" interno: develop -> develop, staging -> staging, main -> production
          if [ "$CURRENT_BRANCH" = "develop" ]; then
            echo "selected_environment=develop" >> $GITHUB_OUTPUT
          elif [ "$CURRENT_BRANCH" = "staging" ]; then
            echo "selected_environment=staging" >> $GITHUB_OUTPUT
          elif [ "$CURRENT_BRANCH" = "main" ]; then
            echo "selected_environment=production" >> $GITHUB_OUTPUT
          else
            echo "selected_environment=unknown" >> $GITHUB_OUTPUT

      - name: Generate tfvars
        id: generate-tfvars
        working-directory: ./terraform
        run: |
          ENVIRONMENT="${{ steps.set-env.outputs.selected_environment }}"

          if [ "$ENVIRONMENT" = "develop" ]; then
            echo "${{ secrets.DEVELOP_TFVARS }}" > develop.tfvars
            echo "tfvars_file=develop.tfvars" >> $GITHUB_OUTPUT

          elif [ "$ENVIRONMENT" = "staging" ]; then
            echo "${{ secrets.STAGING_TFVARS }}" > staging.tfvars
            echo "tfvars_file=staging.tfvars" >> $GITHUB_OUTPUT

          elif [ "$ENVIRONMENT" = "production" ]; then
            echo "${{ secrets.PRODUCTION_TFVARS }}" > production.tfvars
            echo "tfvars_file=production.tfvars" >> $GITHUB_OUTPUT

          else
            echo "No matching environment for branch ${GITHUB_REF_NAME}."
            exit 1

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var-file="${{ steps.generate-tfvars.outputs.tfvars_file }}"

      - name: Terraform Apply
        if: github.event_name == 'push'
        working-directory: ./terraform
        run: terraform apply -auto-approve -var-file="${{ steps.generate-tfvars.outputs.tfvars_file }}"
